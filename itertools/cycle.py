from itertools import cycle, count

# Example 1
# Generate a sequence of ids. The id starts with a cycling prefix letter followed a running number
# e.g. A1000, B1001, C1002, A1003, ...
prefix = "ABC"
start = 1000
n = 10
ids = [f"{a}{b}" for a, b, _ in zip(cycle(prefix), count(start), range(n))]
print(*ids, sep="\n")

# Example 2:
# code generated by CodeGPT
# Write a python function called gen_id, that generates a sequence of ids. The id starts with cycling letters - use the cycle function. Followed by running number, starting with 1000 (use the count function).

def gen_id():
    # from itertools import cycle, count
    letters = cycle(['A', 'B', 'C'])
    running_number = count(1000)

    while True:
        letter = next(letters)
        number = next(running_number)
        yield f'{letter}{number}'

id=gen_id()
ids = [next(id) for _ in range(n)]
print(*ids, sep="\n")
